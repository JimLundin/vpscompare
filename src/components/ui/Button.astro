---
interface Props {
	variant?: 'primary' | 'secondary' | 'outline';
	size?: 'sm' | 'md' | 'lg';
	href?: string;
	target?: string;
	rel?: string;
	class?: string;
}

const { 
	variant = 'primary', 
	size = 'md', 
	href, 
	target, 
	rel,
	class: className = '',
	...rest 
} = Astro.props;

const Tag = href ? 'a' : 'button';
const classes = `btn btn-${variant} btn-${size} ${className}`;
---

<Tag 
	class={classes}
	href={href}
	target={target}
	rel={rel}
	{...rest}
>
	<slot />
</Tag>

<style>
	.btn {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		font-weight: 500;
		transition: all 0.2s ease;
		cursor: pointer;
		text-decoration: none;
		border: none;
		font-family: inherit;
	}

	.btn:focus {
		outline: 2px solid transparent;
		outline-offset: 2px;
		box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
	}

	.btn:disabled {
		opacity: 0.5;
		cursor: not-allowed;
	}

	.btn-primary {
		background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
		color: white;
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
	}

	.btn-primary:hover:not(:disabled) {
		background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
		transform: translateY(-1px);
		box-shadow: 0 4px 8px rgba(59, 130, 246, 0.3);
	}

	.btn-secondary {
		background: #f3f4f6;
		color: #374151;
		border: 1px solid #d1d5db;
	}

	.btn-secondary:hover:not(:disabled) {
		background: #e5e7eb;
		border-color: #9ca3af;
	}

	.btn-outline {
		background: white;
		color: #374151;
		border: 1px solid #d1d5db;
	}

	.btn-outline:hover:not(:disabled) {
		background: #f9fafb;
		border-color: #9ca3af;
	}

	.btn-sm {
		padding: 0.375rem 0.75rem;
		font-size: 0.875rem;
		border-radius: 0.375rem;
	}

	.btn-md {
		padding: 0.5rem 1rem;
		font-size: 0.875rem;
		border-radius: 0.5rem;
	}

	.btn-lg {
		padding: 0.75rem 1.5rem;
		font-size: 1rem;
		border-radius: 0.5rem;
	}
</style>